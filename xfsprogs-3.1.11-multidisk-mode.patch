commit 0cfda29e1fded3975562824895a95e1a4dfe4cbc
Author: Eric Sandeen <sandeen@sandeen.net>
Date:   Thu Dec 6 15:52:54 2012 -0600

    mkfs.xfs: go into multidisk mode when geometry is on cmdline
    
    In the course of some other investigations, I found that
    calc_default_ag_geometry() doesn't go into "multidisk" mode
    unless stripe geometry is *detected* (i.e. by the blkid routines).
    
    Specifying a geometry on the cmdline is *not* sufficient, because
    we test (ft.dsunit | ft.dswidth) which are not set by the cmdline
    options.
    
    If we move the AG calculations to after we have set dsunit & dswdith,
    then we'll pick up either cmdline-specified or blkid-detected
    geometry, and go into "multidisk" mode for AG size/count
    calculations in both cases.
    
    So now for a ~5T fs, for example, we'd make several more
    AGs:
    
    # truncate --size=5t fsfile
    # mkfs.xfs -N -d su=128k,sw=8 fsfile | grep agcount
    meta-data=fsfile                 isize=256    agcount=5, agsize=268435424 blks
    # mkfs/mkfs.xfs -N -d su=128k,sw=8 fsfile | grep agcount
    meta-data=fsfile                 isize=256    agcount=32, agsize=41943008 blks
    
    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Ben Myers <bpm@sgi.com>

Index: xfsprogs-3.1.1/mkfs/xfs_mkfs.c
===================================================================
--- xfsprogs-3.1.1.orig/mkfs/xfs_mkfs.c
+++ xfsprogs-3.1.1/mkfs/xfs_mkfs.c
@@ -2087,25 +2087,6 @@ _("size %s specified for log subvolume i
 		nbmblocks = 0;
 	}
 
-	if (dasize) {		/* User-specified AG size */
-		/*
-		 * Check specified agsize is a multiple of blocksize.
-		 */
-		if (agsize % blocksize) {
-			fprintf(stderr,
-		_("agsize (%lld) not a multiple of fs blk size (%d)\n"),
-				(long long)agsize, blocksize);
-			usage();
-		}
-		agsize /= blocksize;
-		agcount = dblocks / agsize + (dblocks % agsize != 0);
-
-	} else if (daflag)	/* User-specified AG count */
-		agsize = dblocks / agcount + (dblocks % agcount != 0);
-	else
-		calc_default_ag_geometry(blocklog, dblocks,
-				ft.dsunit | ft.dswidth, &agsize, &agcount);
-
 	if (!nodsflag) {
 		if (dsunit) {
 			if (ft.dsunit && ft.dsunit != dsunit) {
@@ -2129,6 +2110,26 @@ _("size %s specified for log subvolume i
 		}
 	} /* else dsunit & dswidth can't be set if nodsflag is set */
 
+	if (dasize) {		/* User-specified AG size */
+		/*
+		 * Check specified agsize is a multiple of blocksize.
+		 */
+		if (agsize % blocksize) {
+			fprintf(stderr,
+		_("agsize (%lld) not a multiple of fs blk size (%d)\n"),
+				(long long)agsize, blocksize);
+			usage();
+		}
+		agsize /= blocksize;
+		agcount = dblocks / agsize + (dblocks % agsize != 0);
+
+	} else if (daflag) {	/* User-specified AG count */
+		agsize = dblocks / agcount + (dblocks % agcount != 0);
+	} else {
+		calc_default_ag_geometry(blocklog, dblocks,
+				dsunit | dswidth, &agsize, &agcount);
+	}
+
 	/*
 	 * If dsunit is a multiple of fs blocksize, then check that is a
 	 * multiple of the agsize too
